{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const feedbackForm = document.querySelector('.js-feedback-form');\n//form data\nlet formData = {\n  email: '',\n  message: '',\n};\n// utilities for LS operations with data\nconst saveToLocalStorage = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\nconst loadFromLocalStorage = key => {\n  const savedData = localStorage.getItem(key);\n  return savedData ? JSON.parse(savedData) : null;\n};\nconst removeFromLocalStorage = key => {\n  localStorage.removeItem(key);\n};\n//get data from LS\nconst fillFormFields = () => {\n  try {\n    const formDataFromLs = loadFromLocalStorage('feedback-form-state');\n    if (formDataFromLs === null) {\n      return;\n    }\n    formData = formDataFromLs;\n\n    for (let key in formDataFromLs) {\n      feedbackForm.elements[key].value = formDataFromLs[key];\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n//call the function to get data from LS\nfillFormFields();\n//set changes to LS\nconst onFormFieldInput = event => {\n  const { target: formElement } = event;\n  const fieldValue = formElement.value;\n  const fieldName = formElement.name;\n  formData[fieldName] = fieldValue;\n\n  saveToLocalStorage('feedback-form-state', formData);\n  console.log(formData);\n};\n//submit form and reset it\nconst onFormSubmit = event => {\n  event.preventDefault();\n\n  const { currentTarget: formEl } = event;\n  //check if fields are filled\n  if (!formData.email.trim() || !formData.message.trim()) {\n    alert('Fill please all fields');\n    return;\n  }\n  console.log('Submitted Data:', formData);\n\n  formEl.reset();\n\n  formData = { email: '', message: '' }; // Clear formData\n\n  removeFromLocalStorage('feedback-form-state');\n};\n//handlers for form\nfeedbackForm.addEventListener('input', onFormFieldInput);\nfeedbackForm.addEventListener('submit', onFormSubmit);\n"],"names":["feedbackForm","formData","saveToLocalStorage","key","data","loadFromLocalStorage","savedData","removeFromLocalStorage","fillFormFields","formDataFromLs","err","onFormFieldInput","event","formElement","fieldValue","fieldName","onFormSubmit","formEl"],"mappings":"uFAAA,MAAMA,EAAe,SAAS,cAAc,mBAAmB,EAE/D,IAAIC,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAEA,MAAMC,EAAqB,CAACC,EAAKC,IAAS,CACxC,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAI,CAAC,CAChD,EACMC,EAAuBF,GAAO,CAClC,MAAMG,EAAY,aAAa,QAAQH,CAAG,EAC1C,OAAOG,EAAY,KAAK,MAAMA,CAAS,EAAI,IAC7C,EACMC,EAAyBJ,GAAO,CACpC,aAAa,WAAWA,CAAG,CAC7B,EAEMK,EAAiB,IAAM,CAC3B,GAAI,CACF,MAAMC,EAAiBJ,EAAqB,qBAAqB,EACjE,GAAII,IAAmB,KACrB,OAEFR,EAAWQ,EAEX,QAASN,KAAOM,EACdT,EAAa,SAASG,CAAG,EAAE,MAAQM,EAAeN,CAAG,CAExD,OAAQO,EAAK,CACZ,QAAQ,IAAIA,CAAG,CAChB,CACH,EAEAF,IAEA,MAAMG,EAAmBC,GAAS,CAChC,KAAM,CAAE,OAAQC,CAAa,EAAGD,EAC1BE,EAAaD,EAAY,MACzBE,EAAYF,EAAY,KAC9BZ,EAASc,CAAS,EAAID,EAEtBZ,EAAmB,sBAAuBD,CAAQ,EAClD,QAAQ,IAAIA,CAAQ,CACtB,EAEMe,EAAeJ,GAAS,CAC5BA,EAAM,eAAc,EAEpB,KAAM,CAAE,cAAeK,CAAQ,EAAGL,EAElC,GAAI,CAACX,EAAS,MAAM,KAAI,GAAM,CAACA,EAAS,QAAQ,OAAQ,CACtD,MAAM,wBAAwB,EAC9B,MACD,CACD,QAAQ,IAAI,kBAAmBA,CAAQ,EAEvCgB,EAAO,MAAK,EAEZhB,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEnCM,EAAuB,qBAAqB,CAC9C,EAEAP,EAAa,iBAAiB,QAASW,CAAgB,EACvDX,EAAa,iBAAiB,SAAUgB,CAAY"}